(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{345:function(s,e,n){"use strict";n.r(e);var a=n(3),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"事务机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事务机制"}},[s._v("#")]),s._v(" 事务机制")]),s._v(" "),n("p",[s._v("AMQP支持事务")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("channel.txSelect();\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("事务回滚")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("channel.rollback();\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"confirm模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#confirm模式"}},[s._v("#")]),s._v(" confirm模式")]),s._v(" "),n("p",[s._v("支持异步")]),s._v(" "),n("blockquote",[n("p",[s._v("若开启事务则不允许在同一队列上开启confirm")])]),s._v(" "),n("p",[s._v("开启confirm模式")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("channel.confirmSelect();\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("编程模式：")]),s._v(" "),n("ol",[n("li",[s._v("普通 waitForConfirms()  发一条")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('channel.basicPublish(queueName, exchangeName, routingkey...)\n\nif(!channelwaitForConfirms()){\n\tSystem.out.println("message send failed");\n}else{\n\tSystem.out.println("message send success");\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("批量 waitForConfirms()  发一批")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('for(int i = 0; i < 100; i++){\n\tchannel.basicPublish(queueName, exchangeName, routingkey...)\n}\n\nif(!channelwaitForConfirms()){\n\tSystem.out.println("message send failed");\n}else{\n\tSystem.out.println("message send success");\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[s._v("异步confirm模式，提供一个回调方法")])]),s._v(" "),n("p",[s._v("channel对象提供的ConfirmListener()回调方法只包含deliverTag（当前Channel发出的消息序号），我们需要自己为每一个Channel维护一个unconfirm的消息序号集合，每publish一条数据，集合中元素加1，每回调\n一次handleAck方法，unconfirm集合删掉相应的一条（multiple = false）或多条（multiple = true）记录，从程序运行效率表上看，这个unconfirm集合最好才有有序集合SortedSet存储结构")])])}),[],!1,null,null,null);e.default=t.exports}}]);